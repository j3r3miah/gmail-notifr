#!/usr/bin/env ruby
require 'net/https'
require 'rexml/document'
require 'yaml'

class GmailChecker
	# password should be base64 encoded
	def initialize(username, password)
		@username = username
		@password = password.unpack("m").first
	end
	
	def	new_mail_count
		http = Net::HTTP.new("mail.google.com", 443)
		http.use_ssl = true
		http.verify_mode = OpenSSL::SSL::VERIFY_NONE
		response = nil
		result = { "err" => "E" }

		begin
		  http.start do |http|
			req = Net::HTTP::Get.new("/mail/feed/atom")
			req.basic_auth(@username, @password)
			response = http.request(req)
		  end

		  if response
			case response.code
			when "401" #HTTPUnauthorized
				result["err"] = "F"
			when "200" #HTTPOK				
				result["err"] = nil
				feed = REXML::Document.new response.body
				result["count"] = feed.get_elements('/feed/fullcount')[0].text.to_i
				result["messages"] = []
				feed.each_element('/feed/entry') do |msg|
					# only return first 10 messages
					break if result["messages"].size > 10
					result["messages"] << {
						"date"     => DateTime.parse(msg.get_elements('issued')[0].text),
						"author"   => msg.get_elements('author/name')[0].text,
						"subject"  => msg.get_elements('title')[0].text,
						"summary"  => msg.get_elements('summary')[0].text
					}
				end
			end
		  end
		rescue REXML::ParseException => e
		  #puts "error parsing feed: #{e.message}"
		rescue => e
		  #puts "error: #{e}"
		rescue Timeout::Error => e
			#puts "time out on connection"
		end
		
		result
	end
end

results = {}
(ARGV.length / 2).times do |t|
	results[ARGV[t * 2]] = GmailChecker.new(ARGV[t * 2], ARGV[t * 2 + 1]).new_mail_count
end

print results.to_yaml

